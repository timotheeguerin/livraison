name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - if: runner.os == 'Linux'
        run: sudo apt-get install lintian
        name: Install lintian

      - run: pnpm install
        name: Install dependencies

      - run: pnpm run build
        name: Build

      - run: pnpm run test
        name: Test

      - run: |
          git_changes=$(git status --porcelain)
          if [ -n "$git_changes" ]; then
            echo "❌ Git changes detected after validation:"
            echo "$git_changes"
            git diff --color=always
            exit 1
          else
            echo "✅ No git changes detected"
          fi
        name: Check not out of date generated files

  format:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: pnpm install
        name: Install dependencies

      - run: pnpm run build
        name: Build

      - run: pnpm run format:check
        name: Check formatting

  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - run: pnpm install
        name: Install dependencies

      - run: pnpm run lint
        name: Lint

      - run: pnpm run lint:sp
        name: Syncpack

  # This allows us to have a branch protection rule for tests and deploys with matrix
  ci-status:
    runs-on: ubuntu-latest
    needs: [test, format, lint]
    if: always()
    steps:
      - name: Successful CI
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failing CI
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
